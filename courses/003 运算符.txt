
#### 算术运算符：
```
    +   //（加）
    +=  //（加等于）
    -   //（减）
    -=  //（减等于）
    *   //（乘）
    /   //（除）
    %   //（取模）
```

　

#### 比较运算符：
```
    ==  //（相等）
    !=  //（不相等）
    >   //（大于）
    <   //（小于）
    >=  //（大于等于）
    <=  //（小于等于）
```

　

#### 逻辑运算符：
```
    &&  //（与）
    ||  //（或）
    !   //（非）    
```

　

#### 位运算符：
- 按位与（&）：对两个数字的每一位执行逻辑与操作。如果对应位都为1，则结果为1，否则为0。
- 按位或（|）：对两个数字的每一位执行逻辑或操作。如果对应位至少有一个为1，则结果为1，否则为0。
- 按位异或（^）：对两个数字的每一位执行逻辑异或操作。如果对应位不同，则结果为1，相同则为0。
- 按位非（~）：对一个数字的每一位执行逻辑非操作。将每个位取反，即将1变为0，将0变为1。
- 左移（<<）：将数字的所有位向左移动指定的位数。右侧空出的位用0填充。
- 右移（>>）：将数字的所有位向右移动指定的位数。左侧空出的位用0填充。
- 无符号右移（>>>）：将数字的所有位向右移动指定的位数，左侧空出的位用0填充，无论正负数。    

　

#### 三元运算符：
```
    return x >= y ? x: y; // return the max of x and y
```

　

#### 幂运算符：
```    
    uint result = 2 ** 3;    // 2的3次方    
    uint result = 10 ** 18;  // 10的18次方(Solidity版本号^0.8.0)
```