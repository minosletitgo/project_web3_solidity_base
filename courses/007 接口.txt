
接口特定：
--接口类似于抽象合约，但它不实现任何功能。
--接口不能包含状态变量。
--接口不能包含构造函数。
--接口不能继承除接口外的其他合约，但接口可以继承于其他接口。
--接口所有函数都必须是external且不能有函数体。
--接口内，可以包含事件。
--继承接口的非抽象合约，必须实现接口定义的所有功能。
--继承接口的抽象合约，可以选择不实现接口的所有函数。
--一个接口，可以继承其他的接口，甚至继承多个其他接口。
--使用接口定义"代币标准"，比较常见。
--使用接口实例：IERC20 taken = IERC20(0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D); 
--Solidity内置的功能，可以访问接口的Id(如，type(IMyInterface).interfaceId)

///////////////////////////////////////////////////////////////////////////////////

--简要示例：

interface IMyInterface {
    // 事件声明
    event ValueChanged(uint256 newValue);

    // 函数声明
    function setValue(uint256 newValue) external;
}

contract MyContract is IMyInterface {
    uint256 public value;

    // 实现接口中的函数
    function setValue(uint256 newValue) external override {
        value = newValue;
        emit ValueChanged(newValue); // 触发事件
    }

    // 访问接口Id(在 contract/TestInterface.sol 中有详细范例)
    function getInterfaceId() public pure returns (bytes4) {
        return type(IMyInterface).interfaceId;
    }
}