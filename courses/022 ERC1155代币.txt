
概念：
--一个数字资产的容器，允许用户之间进行转移和管理。
--在基于ERC20代币与ERC721代币的基础上，ERC1155代币同时支持前面两者。
--ERC1155必须遵循ERC165标准。

特点：
--多种代币类型：允许在同一个合约中管理多种类型的代币，包括同质化代币（如ERC-20）和非同质化代币（如ERC-721）。这意味着开发者可以在一个合约中发行多种资产，从而减少部署成本。
--批量转账：允许一次性转移多个代币，这大大提高了交易效率并降低了交易费用。
--可分割性和可替代性：可以是可分割的（如ERC-20）或不可分割的（如ERC-721），为不同类型的资产提供灵活性。
--元数据：支持通过URI提供代币的元数据，使得每个代币可以拥有独特的信息，适用于游戏、艺术品等应用场景。

应用场景：
--它广泛应用于游戏资产、数字收藏品、代币化现实资产等领域。

总结：
--ERC1155 标准是在 2018-06-17 提出的。它由 Witek Radomski、Andrew Cooke 和 Philippe Castonguay等人 提出，旨在定义一种管理多种代币类型的合约的标准接口。
--ERC-1155是一个功能强大且灵活的标准，为开发者提供了更多的选择和可能性。

记忆方式：
--在基于"熟悉ERC20标准、ERC721标准"的前提下，集合两者的特点，进而联想到"多种代币"的细节。

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

知名 ERC1155 代币项目：
--CryptoKitties：虽然最初是基于ERC-721，但后来也采用了ERC-1155标准进行多样化的资产管理。
--The Sandbox：一个虚拟世界平台，支持玩家创建和交易基于ERC-1155的资产和体验。
--Enjin：专注于游戏和虚拟资产管理，利用ERC-1155创建可互操作的游戏资产。
--Gods Unchained：一款基于区块链的卡牌游戏，使用ERC-1155管理卡牌资产。


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

IERC1155标准的主选函数9个：
--balanceOf(address account, uint256 id)：返回指定地址拥有的目标代币的数量。
--balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)：批量返回指定地址拥有指定代币的数量。
--safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data)：安全转账代币，确保接收者是一个能够处理代币的合约(合约的话，会要求实现IERC1155Receiver接口)或地址。
--safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data)：批量安全转账，细节同上。
--setApprovalForAll(address operator, bool approved)：设置(或取消)对某个地址的代币管理权限，允许该地址转移调用者的所有代币。
--isApprovedForAll(address account, address operator)：查询某个地址是否被批准为另一个地址的代币管理者。

IERC1155标准的主选事件4个：
--TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)：类代币转账事件。
--TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)：批量代币转账事件。
--ApprovalForAll(address indexed account, address indexed operator, bool approved)：批量授权事件。
--URI(string value, uint256 indexed id)：元数据变化事件。

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

IERC1155Receiver 
--如果接收代币的地址，指向的是合约(通常指的是，钱包/经纪人/拍卖应用程序)，那么该合约必须实现IERC1155Receiver接口，否则在进行"安全转账"的时候会发生回退，这是为了防止代币被转入黑洞中。

interface IERC1155Receiver is IERC165 {
    function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes calldata data) external returns (bytes4);
    function onERC1155BatchReceived(address operator, address from, uint256[] calldata ids, uint256[] calldata values, bytes calldata data) external returns (bytes4);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

IERC1155MetadataURI：
--是ERC1155的拓展接口，实现了查询元数据url

interface IERC1155MetadataURI is IERC1155 {
    function uri(uint256 id) external view returns (string memory);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

其他问题：
--ERC1155标准下，代币的授权，是基于用户名下的所有代币，而不是某一个id的代币


代码参考：
--contract/TestERC1155.sol