
抽象合约：
--如果一个智能合约里至少有一个未实现的函数(即，缺少函数主体)，那么该合约必须被标记为abstract，不然编译不通过。
--其他部分与常规合约一致

接口：
--接口类似于抽象合约，但它不实现任何功能。
--接口不能包含状态变量
--接口不能包含构造函数
--接口不能继承除接口外的其他合约，但接口可以继承于其他接口！
--接口所有函数都必须是external且不能有函数体
--继承接口的非抽象合约必须实现接口定义的所有功能。
--继承接口的抽象合约可以选择不实现接口的所有函数。
--使用接口定义"代币标准"，比较常见。
--使用接口实例：IERC20 taken = IERC20(0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D); 



手写一下ERC20接口：

interface IERC20 {
    function totalSupply() external view returns (uint256);
    function balanceOf(address account) external view returns (uint256);
    function transfer(address to, uint256 value) external returns (bool);
    function transferFrom(address from, address to, uint256 value) external returns (bool);
    function approve(address to, uint256 value) external returns (bool);
    function allowance(address from, address to) external view returns (uint256);
}

注意：
--函数的可见性，必须为external
--函数的功能关键字，需要酌情设想一下代币逻辑。
--逻辑函数的返回值，是布尔值哦！
--逻辑函数的编写，必须代入设想一下msg.sender，才能正确理解与编写！